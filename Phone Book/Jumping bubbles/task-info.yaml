type: edu
custom_name: stage2
files:
- name: test/PhoneBookTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;
    import phonebook.MainKt;

    import java.util.Arrays;
    import java.util.List;

    public class PhoneBookTest extends BaseStageTest {
        public PhoneBookTest() {
            super(MainKt.class);
        }

        @Override
        public List<TestCase> generate() {
            return Arrays.asList(
                new TestCase().setTimeLimit(30 * 60 * 1000)
            );
        }

        @Override
        public CheckResult check(String reply, Object clue) {
            reply = reply.toLowerCase();
            return new CheckResult(
                reply.contains("start searching")
                    && reply.contains("found")
                    && reply.contains("min.")
                    && reply.contains("sec.")
                    && reply.contains("ms.")
                    && reply.contains("sorting time")
                    && reply.contains("searching time")
                    && reply.contains("linear search")
                    && reply.contains("bubble sort")
                    && reply.contains("jump search"));
        }
    }
  learner_created: false
- name: src/phonebook/Main.kt
  visible: true
  text: |
    package phonebook

    fun main() {
        println("Hello, World!")
    }
  learner_created: false
- name: src/phonebook/stage1.kt
  visible: true
  text: |
    //@file:Suppress("MemberVisibilityCanBePrivate")
    //
    package phonebook
    //
    //import java.io.File
    //import java.nio.file.Files
    //
    //fun main() {
    //    val directoryLines = Files.readAllLines(File("D:/code/kotlin/phoneBookResources/directory.txt").toPath())
    //    val directory = Array(directoryLines.size) {
    //        PhoneBookEntry(directoryLines[it].split(' ', limit = 2))
    //    }
    //    val names = Files.readAllLines(File("D:/code/kotlin/phoneBookResources/find.txt").toPath())
    //    val totalNames = names.size
    //    val numbers = Array(totalNames) { "" }
    //    var foundNames = 0
    //    println("Start searching...")
    //    val startTime = System.currentTimeMillis()
    //    for ((index, person) in names.withIndex()) {
    //        inner@for (entry in directory) {
    //            if (person == entry.name) {
    //                numbers[index] = entry.number
    //                foundNames++
    //                break@inner
    //            }
    //        }
    //    }
    //    val endTime = System.currentTimeMillis()
    //    val duration = MinsSecsMillis(endTime - startTime)
    //    println("Found $foundNames / $totalNames entries. Time taken: $duration")
    //}
    //
    //class PhoneBookEntry(numberAndName: List<String>) {
    //    val number = numberAndName[0]
    //    val name = numberAndName[1]
    //}
    //
    //class MinsSecsMillis(durationInMillis: Long) {
    //    val mins: Long
    //    val secs: Long
    //    val millis: Long
    //    init {
    //        var input = durationInMillis
    //        mins = input / 60000
    //        input -= (mins * 60000)
    //        secs = input / 1000
    //        input -= (secs * 1000)
    //        millis = input
    //    }
    //
    //    override fun toString() = "$mins min. $secs sec. $millis ms."
    //}
  learner_created: true
- name: src/phonebook/stage2.kt
  visible: true
  text: |+
    package phonebook

  learner_created: true
- name: src/phonebook/stage3.kt
  visible: true
  text: |+
    package phonebook

  learner_created: true
feedback_link: https://hyperskill.org/projects/86/stages/477/implement
status: Solved
record: 2
